<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myservice.mapper.BlahMapper">

    <select id="getMyBlah" parameterType="String" resultType="Blah">
        SELECT s.name,
               s.img,
               m.stdn_id AS stdnId,
               m.id,
               m.contents,
               m.rdate
        FROM stdn s
                 JOIN blah m ON s.id = m.stdn_id
        WHERE stdn_id = #{stdnId}
        ORDER BY m.id DESC
    </select>

    <select id="cntGetMyComm" parameterType="String" resultType="Integer">
        SELECT COUNT(*) AS cnt
        FROM comm
        WHERE stdn_id = #{stdnId}
    </select>

    <select id="cntGetMyBlah" parameterType="String" resultType="Integer">
        SELECT COUNT(*) AS cnt
        FROM blah
        WHERE stdn_id = #{stdnId}
    </select>

    <select id="cntGetMylikes" parameterType="String" resultType="Integer">
        SELECT COUNT(*) AS CNT
        FROM likes
        WHERE stdn_id = #{stdnId}
          AND board = 'B'
    </select>
    <!--이거 없어져도됨....-->
    <select id="getBlahRank" resultType="Blah">
        WITH combined_counts AS (
            SELECT stdn_id
            FROM comm
            UNION ALL
            SELECT stdn_id
            FROM likes
            WHERE board = 'B'
            UNION ALL
            SELECT stdn_id
            FROM blah
        ),
             ranked_counts AS (
                 SELECT stdn_id, postCount,
                        RANK() OVER (ORDER BY postCount DESC) AS ranking
                 FROM (
                          SELECT stdn_id, COUNT(*) AS postCount
                          FROM combined_counts
                          GROUP BY stdn_id
                      )
             )
        SELECT stdn_id AS stdnId, postCount, s.name, s.img, ranking
        FROM ranked_counts
                 JOIN stdn s ON ranked_counts.stdn_id = s.id
        ORDER BY ranking ASC
    </select>

    <select id="getMyBlahRank" parameterType="String" resultType="Blah">
        -- 게시글 + 댓글 + 좋아요 토탈


        WITH combined_counts AS (SELECT stdn_id
                                 FROM comm
                                 UNION ALL
                                 SELECT stdn_id
                                 FROM likes
                                 WHERE board = 'B'
                                 UNION ALL
                                 SELECT stdn_id
                                 FROM blah),
             ranked_counts AS (SELECT stdn_id,
                                      postCount,
                                      RANK() OVER (ORDER BY postCount DESC) AS ranking
                               FROM (SELECT stdn_id, COUNT(*) AS postCount
                                     FROM combined_counts
                                     GROUP BY stdn_id))
        SELECT stdn_id AS stdnId, postCount, s.name, s.img, ranking
        FROM ranked_counts
                 JOIN stdn s ON ranked_counts.stdn_id = s.id
        WHERE stdn_id = #{stdnId}
    </select>

    <select id="select" parameterType="Integer" resultType="Blah">
        SELECT id, stdn_id AS stdnId, contents, rdate, likes
        FROM blah
        WHERE id = #{id}
    </select>

    <select id="selectall" resultType="Blah">
        SELECT s.name,
               s.img,
               m.stdn_id AS stdnId,
               m.id,
               m.contents,
               m.rdate
--                m.likes
        FROM stdn s
                 JOIN blah m ON s.id = m.stdn_id
        ORDER BY m.id DESC
    </select>

    <insert id="insert" parameterType="Blah">
        INSERT INTO blah (id, stdn_id, contents, rdate, likes)
        VALUES (blah_seq.NEXTVAL, #{stdnId}, #{contents}, TO_CHAR(SYSDATE, 'yyyy.MM.dd hh24:mi:ss'), 0)
    </insert>

    <update id="update" parameterType="Blah">
        UPDATE blah
        SET contents=#{contents}
        WHERE id = #{id}
    </update>

    <update id="updateLikes" parameterType="Blah">
        UPDATE blah
        SET likes=likes + 1
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        DELETE
        FROM blah
        WHERE id = #{id}
    </delete>
    <select id="cntLike" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*) AS cnt
        FROM likes
        WHERE BOARD = 'B'
          AND POST_ID = #{postId}
    </select>
</mapper>