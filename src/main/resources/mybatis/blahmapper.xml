<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myservice.mapper.BlahMapper">

    <select id="getMyBlah" parameterType="String" resultType="Blah">
        SELECT s.name,
               s.img,
               m.stdn_id AS stdnId,
               m.id,
               m.contents,
               m.rdate
        FROM stdn s
                 JOIN blah m ON s.id = m.stdn_id
        WHERE stdn_id = #{stdnId}
        ORDER BY m.id DESC
    </select>
    <!--이거 없어져도됨....-->
    <select id="cntGetMyComm" parameterType="String" resultType="Integer">
        SELECT COUNT(*) AS cnt
        FROM comm
        WHERE stdn_id = #{stdnId}
    </select>

    <select id="cntGetMylikes" parameterType="String" resultType="Integer">
        SELECT COUNT(*) AS CNT
        FROM likes
        WHERE stdn_id = #{stdnId}
          AND board = 'B'
    </select>
    <!--이거 없어져도됨....-->
    <select id="getBlahRank" resultType="Blah">
        SELECT m.stdn_id AS stdnId,
               s.name,
               s.img,
               COUNT(*) AS postCount,
               RANK() OVER (ORDER BY COUNT(*) DESC) AS ranking
        FROM stdn s
                 JOIN blah m ON s.id = m.stdn_id
        GROUP BY m.stdn_id, s.name, s.img
        ORDER BY postCount DESC
    </select>

    <select id="getMyBlahRank" parameterType="String" resultType="Blah">
        SELECT *
        FROM (SELECT m.stdn_id AS stdnId,
                     COUNT(*)  AS postCount,
                     RANK()       OVER (ORDER BY COUNT(*) DESC) AS ranking
              FROM blah m
              GROUP BY m.stdn_id) rankings
        WHERE stdnId = #{stdnId}
    </select>

    <select id="select" parameterType="Integer" resultType="Blah">
        SELECT id, stdn_id AS stdnId, contents, rdate, likes
        FROM blah
        WHERE id = #{id}
    </select>

    <select id="selectall" resultType="Blah">
        SELECT s.name,
               s.img,
               m.stdn_id AS stdnId,
               m.id,
               m.contents,
               m.rdate
--                m.likes
        FROM stdn s
                 JOIN blah m ON s.id = m.stdn_id
        ORDER BY m.id DESC
    </select>

    <insert id="insert" parameterType="Blah">
        INSERT INTO blah (id, stdn_id, contents, rdate, likes)
        VALUES (blah_seq.NEXTVAL, #{stdnId}, #{contents}, TO_CHAR(SYSDATE, 'yyyy.MM.dd hh24:mi:ss'), 0)
    </insert>

    <update id="update" parameterType="Blah">
        UPDATE blah
        SET contents=#{contents}
        WHERE id = #{id}
    </update>

    <update id="updateLikes" parameterType="Blah">
        UPDATE blah
        SET likes=likes + 1
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="Integer">
        DELETE
        FROM blah
        WHERE id = #{id}
    </delete>
    <select id="cntLike" parameterType="Integer" resultType="Integer">
        SELECT COUNT(*) AS cnt
        FROM likes
        WHERE BOARD = 'B'
          AND POST_ID = #{postId}
    </select>
</mapper>